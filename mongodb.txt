====MongoDB====

[[Managing Records (MongoDB)]]\\

====MongoDB Data Types====

There are a few basic data types for MongoDB:

null        : {"x" : null}\\
boolean     : {"y" : true}\\
number      : {"a" : 3.14, "b" : 4, "c" : NumberInt("3"), "d" : NumberLong("4")}\\
string      : {"x" : "This is a string"}\\
date        : {"y" : new Date()}\\
regex       : {"x" : /foobar/i}\\
array       : {"y" : ["a", "b", "c"]}\\
embedded doc: {"x" : {"foo", "bar"}}\\
object id   : {"y" : ObjectId()}\\
binary data : {"x" : Binary(data)}\\
code        : {"y" : function() { ''<js code here'' }\\

====ObjectId====

===Structure===

Each ObjectId is 12 bytes long:

| 0 1 2 3 | 4 5 6 | 7 8 | 9 10 11 |
| Timestamp| Machine| PID | Increment |

Certain MongoDB drivers will allow you to query for the Timestamp data in an ObjectId.

It's important to note that the Timestamp field does not need to be synchronized across all machines in a cluster. It is a field that only needs to be new and incremental.

The Machine field is a hash of the machine's hostname.

The PID field is the PID of the ObjectId-generating process.

Combined, the different fields allow for 16,777,216 different ObjectIds to be generated per second. 

====Multi-threading in MongoDB====

Certain operations affect multiple documents. Operations like a multi-update have a single thread for the entire operation and every update is performed one after the other in sequence. However, the threads will occasionally yield to other threads in order to allow other operations to affect the same documents. MongoDB does lock a document when it is performing a write operation on it, and this is done to ensure that a read/write operation will not work on a document that has only been half updated.

====Data with an Expiration Period====

It is possible to configure MongoDB to automatically delete documents after a specified amount of time. For this, create an index with ''createdAt'' set to 1 and ''expireAfterSeconds'' set to the number of seconds before the data is removed from the collection:

<code>
> db.data.createIndex({"createdAt" : 1}, {"expireAfterSeconds": 45})
> db.data.insert({"createdAt": new Date(), "name" : "geardo", "commitMessage" : "hey there"})
> db.data.find()
{ "_id" : ObjectId("552d4eac4f0c78aef8b75224") }
{ "_id" : ObjectId("552d4ec74f0c78aef8b75225"), "createdAt" : ISODate("2015-04-14T17:30:47.888Z"), "name" : "geardo", "commitMessage" : "hey there" }
> db.data.find()
{ "_id" : ObjectId("552d4eac4f0c78aef8b75224") }
</code>
