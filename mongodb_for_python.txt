====MongoDB for Python Developers====

Course website: https://university.mongodb.com/

====MongoDB Cursors in Python====

Documentation Link: http://api.mongodb.org/python/current/api/pymongo/cursor.html

===Example===

Using ''find'' to fetch a cursor and then iterating over the cursor:

<code>
>>> items = names.find({})
>>> items.count()
7
>>> for doc in items:
...     print doc
...
{u'age': 26.0, u'_id': ObjectId('5522fe9b0865d1f30032fa9c'), u'name': u'Gerardo'}
{u'age': 2.0, u'_id': ObjectId('5522fec10865d1f30032fa9d'), u'name': u'James'}
{u'age': 35.0, u'_id': ObjectId('552355e10865d1f30032fa9e'), u'name': u'Jack'}
{u'age': 31.0, u'_id': ObjectId('552355f10865d1f30032fa9f'), u'name': u'Jill'}
{u'age': 22.0, u'_id': ObjectId('552356920865d1f30032faa0'), u'name': u'Thomas'}
{u'age': 15.0, u'_id': ObjectId('552356920865d1f30032faa1'), u'name': u'Eric'}
{u'age': 25.0, u'_id': ObjectId('552356920865d1f30032faa2'), u'name': u'Jane'}
>>> items.rewind()
<pymongo.cursor.Cursor object at 0x7fbd451cc7d0>
>>> for doc in items:
...     doc["name"]
...
u'Gerardo'
u'James'
u'Jack'
u'Jill'
u'Thomas'
u'Eric'
u'Jane'
</code>

====Authenticating with PyMongo====

Use the ''authenticate()'' method on a database, supplying the username and the password:

<code>
mongo_host = 'localhost'
mongo_port = 27017

mongo_user = 'admin'
mongo_pass = 'pass'

connection = pymongo.MongoClient(mongo_host, mongo_port)
connection.gccom.authenticate(mongo_user, mongo_pass)

db = connection.gccom
pydata = db.data
pydata.find({})
</code>

The ''connection.gccom.authenticate(mongo_user, mongo_pass)'' statement will return ''True'' if the authentication was successful. It is possible that the authentication will succeed but the user will not have the proper permissions to access the database, in which case ''pydata.find({})'' would return an authorization error.

====Inserting JSON into MongoDB====

In this example, we fetch a JSON document from ''reddit.com'' and stuff it into a file ''data.txt''. Next, the JSON is read from the file into a variable in Python and then, once a connection to the MongoDB database is established, we push data from the JSON document into the database:

<code>
import json
import pymongo

with open('data.txt', 'w') as datafile:
    parsed = json.load(datafile)

# parsed['data']['children'] contains the data we want to keep!
# It's an array, so we can iterate over it.

connection = pymongo.MongoClient('localhost')
db = connection.reddit
stories = db.stories

for item in parsed['data']['children']:
    stories.insert(item['data'])
</code>

The records are now in the ''reddit.stories'' collection!

====Using Regex Queries in Python====

This searches through the ''reddit.stories'' collection that was created in the ''Inserting JSON into MongoDB'' section.

We will be using a regular expression query to get all titles that match the string 'Internet'. The ''try'' block is meant to execute when there is a problem connecting to the collection.

<code>
>>> query = {'title' : {'$regex' : 'Internet'}}
>>> # display will be used to specify which fields I want MongoDB to return. Here, exclude _id
>>> display = {'title' : 1, '_id' : 0}
>>> 
>>> try:
...     iter = stories.find(query, display)
... except:
...     print "No results"
... 
>>> for document in iter:
...     print document
... 
{u'title': u"145 of the Internet\u2019s 10,000 top websites use hidden scripts to extract a device fingerprint from users' browsers. The findings suggest that secret tracking is more widespread than previously thought."}
{u'title': u'Zuckerberg says Internet.org is not anti-net neutrality... but it is'}
{u'title': u'Internet.org is just a Facebook proxy targeting India\u2019s poor'}
</code>

